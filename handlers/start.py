from aiogram import Router, F, types
from aiogram.types import CallbackQuery, Message, InlineKeyboardMarkup, InlineKeyboardButton
from utils.admins import is_admin
from utils.users import register_user, get_user, get_balance
from keyboards.inline_main import main_menu_kb, check_menu_kb, other_filters_kb

router = Router()

WELCOME_TEXT = (
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö–¶ –ë–ê–ó–ê –ú–ê–°–¢–ï–†.\n"
    "–ù–∞—à –±–æ—Ç —Å–æ–±–∏—Ä–∞–µ—Ç –≤ —Å–µ–±–µ –ø—Ä–æ–∑–≤–æ–Ω–µ–Ω–Ω—É—é –±–∞–∑—É –±–æ–ª–µ–µ —á–µ–º –° 300 –æ—Ñ–∏—Å–æ–≤ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ, –Ω–µ —É—á–∏—Ç—ã–≤–∞—è –Ω–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—é—Ç—Å—è. –¢–∞–∫–∂–µ –±–æ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ –±–∞–∑—É –Ω–æ–º–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —è–≤–ª—è—é—Ç—Å—è –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –ú–§–û.\n\n"
    "–ß–¢–û –ë–£–î–ï–¢ –° –í–ê–®–ï–ô –ë–ê–ó–û–ô, –ü–û–°–õ–ï –¢–û–ì–û –ö–ê–ö –û–ù–ê –ü–û–ü–ê–î–ï–¢ –í –ë–û–¢?\n"
    "–î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤. –ù–æ–º–µ—Ä–∞ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–∑–≤–æ–Ω–µ–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤ —Ü–µ–ª—è—Ö —É–ª—É—á—à–µ–Ω–∏—è –±–æ—Ç–∞.\n"
    "–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –º—ã –Ω–µ —Ö—Ä–∞–Ω–∏–º –∫—É—á—É –ª–∏—à–Ω–µ–≥–æ –≤–µ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö –∏ –≤–∞—à–∞ –±–∞–∑–∞ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ø–∞—Å—Ç—å –≤ —á—å–∏-—Ç–æ —Ä—É–∫–∏."
)

MENU_TEXT = (
    "–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ\n"
    "–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é, –ª–∏–±–æ –∫–æ–º–∞–Ω–¥—ã.\n\n"
    "–ö–û–ú–ê–ù–î–´:\n"
    "/start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é;\n"
    "/check - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–∑—É;\n"
    "/profile - –ø—Ä–æ—Ñ–∏–ª—å;\n"
    "/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞;\n"
    "/help - –ø–æ–º–æ—â—å/–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è."
)


@router.message(F.text == "/start")
async def cmd_start(message: Message):
    is_new = register_user(message.from_user.id, message.from_user.first_name or "-", message.from_user.username or "-")
    if is_new:
        await message.answer(WELCOME_TEXT)
    await send_main_menu(message)


async def send_main_menu(message: Message):
    kb = list(main_menu_kb.inline_keyboard)
    if is_admin(message.from_user.id):
        kb.append([InlineKeyboardButton(text="üõ† –ê–¥–º–∏–Ω", callback_data="admin_panel")])
    await message.answer(MENU_TEXT, reply_markup=InlineKeyboardMarkup(inline_keyboard=kb))


@router.message(F.text == "/check")
async def cmd_check(message: Message):
    await message.answer(
        "–ù–∞—à —Å–µ—Ä–≤–∏—Å –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ–±—ä–µ–º —Ñ–∞–π–ª–æ–≤ –¥–æ 20–º–± –∑–∞ —Ä–∞–∑!\n\n"
        "\ud83d\udcc3 –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É –±–∞–∑—É –≤ –≤–∏–¥–µ Excel —Ñ–∞–π–ª–∞.\n"
        "\ud83d\udd0e –ë–æ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ç–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ, –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö.\n"
        "-> –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø—Ä–æ–≤–µ—Ä–∫–µ (https://telegra.ph/PROVERIT-BAZU-glavnoe-menyu-11-10)",
        reply_markup=check_menu_kb,
    )


@router.message(F.text == "/profile")
async def cmd_profile(message: Message):
    user = get_user(message.from_user.id)
    balance = get_balance(message.from_user.id)
    created = user.get("created_at", "-")
    await message.answer(
        f"#\ufe0f\u20e3 ID: {message.from_user.id}\n"
        f"\ud83d\udc64 –ò–º—è: {message.from_user.first_name}\n"
        f"\ud83d\udd17 –ù–∏–∫–Ω–µ–π–º: @{message.from_user.username if message.from_user.username else '‚Äî'}\n\n"
        f"\u2b55\ufe0f –ë–∞–ª–∞–Ω—Å: {balance:.2f} $\n"
        f"\ud83d\udccb –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {created}",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="topup")],[InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="main_menu")]])
    )


@router.message(F.text == "/help")
async def cmd_help(message: Message):
    await message.answer(
        "–ù–∞—à –±–æ—Ç —Å–æ–±–∏—Ä–∞–µ—Ç –≤ —Å–µ–±–µ –ø—Ä–æ–∑–≤–æ–Ω–µ–Ω–Ω—É—é –±–∞–∑—É –±–æ–ª–µ–µ —á–µ–º –° 300 –æ—Ñ–∏—Å–æ–≤ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ, –Ω–µ —É—á–∏—Ç—ã–≤–∞—è –Ω–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—é—Ç—Å—è. –¢–∞–∫–∂–µ –±–æ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ –±–∞–∑—É –Ω–æ–º–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —è–≤–ª—è—é—Ç—Å—è –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –ú–§–û.\n\n"
        "–ß–¢–û –ë–£–î–ï–¢ –° –í–ê–®–ï–ô –ë–ê–ó–û–ô, –ü–û–°–õ–ï –¢–û–ì–û –ö–ê–ö –û–ù–ê –ü–û–ü–ê–î–ï–¢ –í –ë–û–¢?\n"
        "–î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤. –ù–æ–º–µ—Ä–∞ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–∑–≤–æ–Ω–µ–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤ —Ü–µ–ª—è—Ö —É–ª—É—á—à–µ–Ω–∏—è –±–æ—Ç–∞.\n"
        "–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –º—ã –Ω–µ —Ö—Ä–∞–Ω–∏–º –∫—É—á—É –ª–∏—à–Ω–µ–≥–æ –≤–µ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö –∏ –≤–∞—à–∞ –±–∞–∑–∞ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ø–∞—Å—Ç—å –≤ —á—å–∏-—Ç–æ —Ä—É–∫–∏.\n\n"
        "–ö–∞–Ω–∞–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π (https://t.me/Master_bazy)\n"
        "–ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –±–æ—Ç–æ–º (https://t.me/Master_bazy/22)\n"
        "–ü–æ–¥—Ä–æ–±–Ω—ã–π FAQ (https://t.me/Master_bazy/21)\n"
        "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ê–¥–º–∏–Ω—É (https://t.me/baza_master)",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="main_menu")]])
    )


@router.message(F.text == "/stats")
async def cmd_stats(message: Message):
    await message.answer(
        "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –¥–∞–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –±–æ—Ç–∞.",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="main_menu")]])
    )


@router.callback_query(F.data == "main_menu")
async def main_menu_cb(callback: CallbackQuery):
    await send_main_menu(callback.message)
    await callback.answer()


@router.callback_query(F.data == "check_menu")
async def check_menu_cb(callback: CallbackQuery):
    await cmd_check(callback.message)
    await callback.answer()


@router.callback_query(F.data == "other_filters")
async def other_filters_cb(callback: CallbackQuery):
    await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å—Ç—Ä:", reply_markup=other_filters_kb)
    await callback.answer()


@router.callback_query(F.data == "filter_activity")
async def activity_stub(callback: CallbackQuery):
    await callback.message.answer(
        "\ud83d\udd0e –ü–†–û–í–ï–†–ö–ê –ê–ö–¢–ò–í–ù–û–°–¢–ò –ù–û–ú–ï–†–ê\n(–õ–Æ–ë–ê–Ø –°–¢–†–ê–ù–ê)\n\n"
        "–£—Å–ª—É–≥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ù–∞–ø–∏—à–∏—Ç–µ @baza_master" ,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="other_filters")]])
    )
    await callback.answer()


@router.callback_query(F.data == "filter_debt_kz")
async def debt_stub(callback: CallbackQuery):
    await callback.message.answer(
        "\ud83d\udd0e –ü–†–û–í–ï–†–ö–ê –î–û–õ–ñ–ù–ò–ö–û–í (–ö–ê–ó–ê–•–°–¢–ê–ù)\n\n"
        "–£—Å–ª—É–≥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ù–∞–ø–∏—à–∏—Ç–µ @baza_master" ,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="other_filters")]])
    )
    await callback.answer()


@router.callback_query(F.data.in_("check_call", "check_call_mfo"))
async def call_stub(callback: CallbackQuery):
    await callback.message.answer("–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", reply_markup=check_menu_kb)
    await callback.answer()
